{"version":3,"sources":["Componentes/AgregarCategoria.js","helpers/getGif.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evento","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","setImages","useEffect","then","imgs","GifExpertApp","categories","href","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAmBA,OAEQ,sBAAMC,SAdO,SAACC,GAClBA,EAAOC,iBAEFJ,EAAWK,OAAOC,OAAQ,IAE3BR,GAAc,SAAAS,GAAI,MAAG,CAACP,MACtBC,EAAc,MAQd,SAEI,uBACCO,KAAK,OACLC,YAAY,uBACZC,MAAOV,EACPW,SAzBa,SAACR,GAEvBF,EAAcE,EAAOS,OAAOF,a,8BCZvBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,gEAMDI,MAAMF,GANL,cAMbG,EANa,gBAOEA,EAAKC,OAPP,uBAOZC,EAPY,EAOZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAoBZM,GApBY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAI/B,OACI,qBAAKc,UAAW,oCAAhB,SACI,qBAAKC,IAAKf,EAAKgB,IAAKN,OCFnBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAItB,EAA4Bf,mBAAS,IAArC,mBAAO4B,EAAP,KAAeO,EAAf,KAUC,OARAC,qBAAW,WACPtB,EAAQC,GAAUsB,MAAK,SAAAC,GAAI,OAAIH,EAAUG,QAC1C,CAACvB,IAOA,eAAC,WAAD,WACR,6BAAMA,IACE,qBAAKgB,UAAU,YAAf,SAIYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aCzBtBa,EAAe,WAWxB,MAAoCvC,mBAAS,CAAC,SAA9C,mBAAOwC,EAAP,KAAmBzC,EAAnB,KAMA,OAII,cAFA,CAEC,WAAD,WAER,+BAAI,qCAAc,qCAAc,qCAAc,wCAAc,qCAAc,qCAAc,wCAC5E,qEAGA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAGIyC,EAAWhB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADHA,QAOf,uBAEA,wDAA0B,mBAAG0B,KAAK,iCAAR,oCAA1B,wCCzCZC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.677ec156.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport PropTypes from 'prop-types';\n\n\n\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue,setInputValue] = useState('')\n    \n    const handleInputChange = (evento) => {\n        \n        setInputValue(evento.target.value);\n    }\n    \n    const handleSubmit = (evento) => {\n        evento.preventDefault();\n\n        if ( inputValue.trim().length> 2 ){\n\n            setCategories(cats =>[inputValue]);\n            setInputValue('');\n        }\n\n    }\n\n\n    return (\n        \n            <form onSubmit = {handleSubmit}>\n\n                <input \n                 type=\"text\"\n                 placeholder=\"Ingrese su busqueda:\"\n                 value={inputValue}\n                 onChange={handleInputChange}\n                \n                />\n\n            </form>\n           \n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=200&api_key=9Lpf5SSWlOBstTnBAVsYAzemACrLrKSP`;\n                \n    \n    \n    const resp= await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n\n    })\n\n\n\n    \n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    \n   \n    \n    return (\n        <div className= \"animate__animated animate__wobble\">\n            <img src={url} alt={title} />\n            \n        </div>\n    )\n}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport { getGifs } from '../helpers/getGif';\nimport { GifGridItem } from './GifGridItem';\n\n\n\nexport const GifGrid = ({category}) => {\n\n   \n\n   const [images, setImages] = useState([])\n\n    useEffect( ()=>{\n        getGifs(category).then(imgs => setImages(imgs))\n    }, [category] )\n\n    \n\n    \n\n    return (\n        <Fragment>\n<h3>{ category }</h3>\n        <div className=\"card-grid\">\n            \n            \n                {\n                    images.map( img =>(\n                        <GifGridItem \n                        key = {img.id}\n                        {...img}/>\n                    ))\n                }\n            \n        </div>\n\n        </Fragment>\n        \n    )\n}\n","import React, { Fragment, useState } from 'react'\nimport { AddCategory } from './Componentes/AgregarCategoria';\nimport { GifGrid } from './Componentes/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    \n\n    /*\n    useState es una funcion que recibe un valor y retorna un arreglo cuya primera \n    posicion es el mismo valor y el segundo argumento es una funcion que usualmente \n    se le pone set, se usa para establecer el valor al primer argumento del arreglo */\n\n    /* se usa para poder cambiar el valor de una constante */\n\n    const [categories, setCategories] = useState(['Goku']);\n    \n   /* const agregar = () => {\n        agregarCategorias([...categorias,\"Terror\"]);\n    } */\n    \n    return (\n        \n        /* en la linea 28 se envia la referencia a la propiedad agregarCategorias \n        de la linea 15 para hacer la conexion con el componente AgregarCategorias */\n        <Fragment>\n\n<h1><span>G</span><span>I</span><span>F</span><span>Â </span><span>A</span><span>P</span><span>P</span></h1>\n            <h2>Busca cualquier GIF en nuestra web.</h2>\n            \n            \n            <AddCategory setCategories = {setCategories}/>\n            <hr />\n\n          \n            <ol>\n                { \n                \n                categories.map(category =>(\n                    <GifGrid \n                    key = {category}\n                    category={category}/>\n                ))\n                 \n                }\n\n            </ol>\n            <hr />\n\n            <h4>Juan Villalta    |    <a href=\"https://github.com/jmvillaltas\">github.com/jmvillaltas</a>    |    jmvillalta@outlook.es</h4>\n        </Fragment>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './GifExpertApp';\n\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}